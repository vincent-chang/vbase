name: WindowsRelease
on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - '**'
      - '!main'
      - '!feature'
    tags:
      - '**'
    paths-ignore:
      - '**.md'
      - 'tools/**'
      - '.github/workflows/**'
      - '!.github/workflows/WindowsRelease.yml'

  pull_request:
    types: [opened, reopened, ready_for_review]
    paths-ignore:
      - '**.md'
      - 'tools/**'
      - '.github/workflows/**'
      - '!.github/workflows/WindowsRelease.yml'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/vbase' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  win-release-64:
    # Builds binaries for windows_amd64
    name: Windows (64 Bit)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}
          save: ${{ github.ref == 'refs/heads/main' || github.repository != 'vincent-chang/vbase' }}

      - name: Install pytest
        run: |
          python -m pip install pytest

      - name: Build
        shell: bash
        run: |
          python scripts/windows_ci.py
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
          export VCPKG_TOOLCHAIN_PATH=`pwd`/vcpkg/scripts/buildsystems/vcpkg.cmake
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64 -DENABLE_EXTENSION_AUTOLOADING=1 -DENABLE_EXTENSION_AUTOINSTALL=1 -DDUCKDB_EXTENSION_CONFIGS="${GITHUB_WORKSPACE}/.github/config/bundled_extensions.cmake" -DBUILD_ODBC_DRIVER=1 -DDISABLE_UNITY=1
          cmake --build . --config Release

      - name: Test
        shell: bash
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          echo "DUCKDB_INSTALL_LIB=D:\a\duckdb\duckdb\src\Release\duckdb.dll" >> $env:GITHUB_ENV
          test/Release/unittest.exe

      - name: Tools Test
        shell: bash
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          python -m pytest tools/shell/tests --shell-binary Release/duckdb.exe
          tools/sqlite3_api_wrapper/Release/test_sqlite3_api_wrapper.exe

      - name: Deploy
        shell: bash
        run: |
          python scripts/amalgamation.py
          choco install zip -y --force
          zip -j vbase_cli-windows-amd64.zip Release/duckdb.exe
          zip -j libvbase-windows-amd64.zip src/Release/duckdb.dll src/Release/duckdb.lib src/amalgamation/duckdb.hpp src/include/duckdb.h
          zip -j vbase_odbc-windows-amd64.zip tools/odbc/bin/Release/*
          python scripts/asset-upload-gha.py libvbase-windows-amd64.zip vbase_cli-windows-amd64.zip vbase_odbc-windows-amd64.zip

      - uses: actions/upload-artifact@v3
        with:
          name: duckdb-binaries-windows
          path: |
            libvbase-windows-amd64.zip
            vbase_cli-windows-amd64.zip
            vbase_odbc-windows-amd64.zip

      - uses: ilammy/msvc-dev-cmd@v1
      - name: Duckdb.dll export symbols with C++ on Windows
        shell: bash
        run: cl -I src/include examples/embedded-c++-windows/cppintegration.cpp -link src/Release/duckdb.lib

      - name: Install ODBC Driver
        shell: bash
        run: |
          tools/odbc/bin/Release/odbc_install.exe //CI //Install
          Reg Query "HKLM\SOFTWARE\ODBC\ODBC.INI\ODBC Data Sources"
          Reg Query "HKLM\SOFTWARE\ODBC\ODBC.INI\DuckDB"
          Reg Query "HKLM\SOFTWARE\ODBC\ODBCINST.INI\DuckDB Driver"

      - name: Enable ODBC Trace HKCU
        shell: bash
        run: |
          REG ADD "HKCU\SOFTWARE\ODBC\ODBC.INI\ODBC" //f
          REG ADD "HKCU\SOFTWARE\ODBC\ODBC.INI\ODBC" //v Trace //t REG_SZ //d 1
          REG ADD "HKCU\SOFTWARE\ODBC\ODBC.INI\ODBC" //v TraceDll //t REG_SZ //d "C:\Windows\system32\odbctrac.dll"
          REG ADD "HKCU\SOFTWARE\ODBC\ODBC.INI\ODBC" //v TraceFile //t REG_SZ //d "D:\a\duckdb\duckdb\ODBC_TRACE.log"
          echo "----------------------------------------------------------------"
          Reg Query "HKCU\SOFTWARE\ODBC\ODBC.INI\ODBC"

      - name: Test Standard ODBC tests
        shell: bash
        run: |
          tools/odbc/bin/Release/test_odbc.exe

      - name: Print ODBC trace on failure
        if: ${{ failure() }}
        shell: bash
        run: cat ODBC_TRACE.log

      - name: System.Data.ODBC tests
        shell: bash
        run: |
          tools/odbc/bin/Release/SystemDataODBC_tests.exe

